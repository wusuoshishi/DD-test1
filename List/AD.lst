C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE AD
OBJECT MODULE PLACED IN .\Output\AD.obj
COMPILER INVOKED BY: D:\Program_Files\KEIL5_521A\C51\BIN\C51.EXE Application_Library\AD.c OMF2 OPTIMIZE(8,SPEED) BROWSE 
                    -INCDIR(.\Inc;.\User;.\Application_Library;.\Project) DEBUG PRINT(.\List\AD.lst) OBJECT(.\Output\AD.obj)

line level    source

   1          #include        "..\Application_Library\Global.h"
   2          
   3          unsigned char   xdata   b_warning_buf=0;
   4          unsigned char   data    b_warning=0;
   5          
   6          unsigned char   xdata   b_error_sec=0;
   7          unsigned char   xdata   b_error_sec_1=0;
   8          unsigned char   xdata   b_error_e3=0;
   9          
  10          unsigned char   xdata   Target_wendu_1=35;
  11          unsigned char   xdata   Target_wendu_2=35;
  12          
  13          unsigned int    xdata   b_quit_time=0;
  14          
  15          
  16          
  17          #if                      c_temp_fast
              bit             f_e3_xd=0;
              bit   f_first_checke3=0;
              unsigned char   xdata   b_wendu_old=0;
              #endif
  22          
  23          bit             check_ad_ok=0;  //AD检测完成
  24          bit             check_ad_ok_1=0;    //AD1检测完成
  25          
  26          unsigned char data      b_delay_check_ad=0;
  27          
  28          unsigned char data      gb_wendu=0;
  29          unsigned int    xdata   b_ad_buf0=0;
  30          unsigned char   xdata   b_ad_buf1=0;
  31          unsigned char   xdata   b_ad_value=0;           //查表得出的温度值
  32          unsigned char   xdata   b_temp=100;                     //底部温度值
  33          unsigned char   xdata   b_temp_cnt=0;   //比较计数
  34          
  35          unsigned char   xdata   b_admax_value=0;
  36          unsigned char   xdata   b_admin_value=0;
  37          unsigned char   xdata   b_temp_ad=0;
  38          
  39          
  40          #if                      double_ad_channel
              unsigned char data      gb_wendu2=0;
              unsigned int    xdata   b_ad_buf0_1=0;
              unsigned char   xdata   b_ad_buf1_1=0;
              unsigned char   xdata   b_ad_value_1=0;         //查表得出的温度值
              unsigned char   xdata   b_temp_1=100;                   //底部温度值
              unsigned char   xdata   b_temp_cnt_1=0;
              
              unsigned char   xdata   b_admax_value_1=0;
              unsigned char   xdata   b_admin_value_1=0;
              unsigned char   xdata   b_temp_ad_1=0;
              #endif
  52          
  53          #if   ad_en
  54          
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 2   

  55          #if     tab_50k_10k
              unsigned char const code        tab_temper[]=
              {
                  0x0E,       //0
                  0x0F,
                  0x10,
                  0x11,
                  0x11,
                  0x12,
                  0x13,
                  0x14,
                  0x15,
                  0x16,
                  0x17,
                  0x18,
                  0x19,
                  0x1A,
                  0x1B,
                  0x1C,
                  0x1E,
                  0x1F,
                  0x20,
                  0x21,
                  0x23,
                  0x24,
                  0x26,
                  0x27,
                  0x29,
                  0x2A,
                  0x2C,
                  0x2D,
                  0x2F,
                  0x31,
                  0x32,
                  0x34,
                  0x36,
                  0x38,
                  0x3A,
                  0x3C,
                  0x3D,
                  0x3F,
                  0x41,
                  0x43,
                  0x45,
                  0x48,
                  0x4A,
                  0x4C,
                  0x4E,
                  0x50,
                  0x52,
                  0x54,
                  0x57,
                  0x59,
                  0x5B,
                  0x5D,
                  0x60,
                  0x62,
                  0x64,
                  0x67,
                  0x69,
                  0x6B,
                  0x6D,
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 3   

                  0x70,
                  0x72,
                  0x74,
                  0x77,
                  0x79,
                  0x7B,
                  0x7E,
                  0x80,
                  0x82,
                  0x84,
                  0x87,
                  0x89,
                  0x8B,
                  0x8D,
                  0x8F,
                  0x91,
                  0x94,
                  0x96,
                  0x98,
                  0x9A,
                  0x9C,
                  0x9E,
                  0xA0,
                  0xA2,
                  0xA4,
                  0xA6,
                  0xA8,
                  0xA9,
                  0xAB,
                  0xAD,
                  0xAF,
                  0xB1,
                  0xB2,
                  0xB4,
                  0xB6,
                  0xB7,
                  0xB9,
                  0xBA,
                  0xBC,
                  0xBD,
                  0xBF,
                  0xC0,
                  0xC2,
                  0xC3,
                  0xC5,
                  0xC6,
                  0xC7,
                  0xC8,
                  0xCA,
                  0xCB,
                  0xCC,
                  0xCD,
                  0xCE,
                  0xD0,
                  0xD1,
                  0xD2,
                  0xD3,
                  0xD4,
                  0xD5,
                  0xD6,
                  0xD7,
                  0xD8,
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 4   

                  0xD9,
                  0xDA,
                  0xDA,
                  0xDB,
                  0xDC,
                  0xDD,
                  0xDE,
                  0xDF,
                  0xDF,
                  0xE0,
                  0xE1,
                  0xE1,
                  0xE2,
                  0xE3,
                  0xE4,
                  0xE5 //136
              };
              #endif
 197          
 198          #if     tab_100k_10k
              unsigned char const code        tab_temper[]=
              {
                  0x07,       //0
                  0x08,
                  0x08,
                  0x08,
                  0x09,
                  0x09,
                  0x0A,
                  0x0A,
                  0x0B,
                  0x0B,
                  0x0C,
                  0x0C,
                  0x0D,
                  0x0E,
                  0x0E,
                  0x0F,
                  0x10,
                  0x10,
                  0x11,
                  0x12,
                  0x12,
                  0x13,
                  0x14,
                  0x15,
                  0x16,
                  0x17,
                  0x18,
                  0x19,
                  0x1A,
                  0x1B,
                  0x1C,
                  0x1D,
                  0x1E,
                  0x1F,
                  0x20,
                  0x22,
                  0x23,
                  0x24,
                  0x25,
                  0x27,
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 5   

                  0x28,
                  0x29,
                  0x2B,
                  0x2C,
                  0x2E,
                  0x2F,
                  0x31,
                  0x32,
                  0x34,
                  0x36,
                  0x37,
                  0x39,
                  0x3B,
                  0x3C,
                  0x3E,
                  0x40,
                  0x42,
                  0x44,
                  0x46,
                  0x47,
                  0x49,
                  0x4B,
                  0x4D,
                  0x4F,
                  0x51,
                  0x53,
                  0x55,
                  0x57,
                  0x59,
                  0x5B,
                  0x5D,
                  0x5F,
                  0x61,
                  0x63,
                  0x66,
                  0x68,
                  0x6A,
                  0x6C,
                  0x6E,
                  0x70,
                  0x72,
                  0x74,
                  0x76,
                  0x78,
                  0x7A,
                  0x7D,
                  0x7F,
                  0x81,
                  0x83,
                  0x85,
                  0x87,
                  0x89,
                  0x8B,
                  0x8D,
                  0x8F,
                  0x91,
                  0x93,
                  0x95,
                  0x96,
                  0x98,
                  0x9A,
                  0x9C,
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 6   

                  0x9E,
                  0xA0,
                  0xA1,
                  0xA3,
                  0xA5,
                  0xA7,
                  0xA8,
                  0xAA,
                  0xAC,
                  0xAD,
                  0xAF,
                  0xB0,
                  0xB2,
                  0xB3,
                  0xB5,
                  0xB6,
                  0xB8,
                  0xB9,
                  0xBB,
                  0xBC,
                  0xBD,
                  0xBF,
                  0xC0,
                  0xC1,
                  0xC3,
                  0xC4,
                  0xC5,
                  0xC6,
                  0xC8,
                  0xC9,
                  0xCA,
                  0xCB,
                  0xCC,
                  0xCD,
                  0xCE, //136
              };
              #endif
 340          
 341          
 342          #if     tab_100k_27k
              unsigned char const code        tab_temper[]=
              {
                  0x13,       //0
                  0x14,//1   
                  0x15,//2
                  0x16,//3
                  0x17,//4
                  0x18,//5
                  0x19,//6
                  0x1A,//7
                  0x1C,//8
                  0x1D,//9
                  0x1E,//10
                  0x1F,//11
                  0x21,//12
                  0x22,//13
                  0x24,//14
                  0x25,//15
                  0x27,//16
                  0x28,//17
                  0x2A,//18
                  0x2B,//19
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 7   

                  0x2D,//20
                  0x2F,//21
                  0x30,//22
                  0x32,//23
                  0x34,//24
                  0x36,//25
                  0x38,//26
                  0x3A,//27
                  0x3C,//28
                  0x3E,//29
                  0x40,//30
                  0x42,//31
                  0x44,//32
                  0x46,//33
                  0x48,//34
                  0x4A,//35
                  0x4D,//36
                  0x4F,//37
                  0x51,//38
                  0x53,//39
                  0x56,//40
                  0x58,//41
                  0x5A,//42
                  0x5D,//43
                  0x5F,//44
                  0x61,//45
                  0x64,//46
                  0x66,//47
                  0x69,//48
                  0x6B,//49
                  0x6D,//50
                  0x70,//51
                  0x72,//52
                  0x75,//53
                  0x77,//54
                  0x79,//55
                  0x7C,//56
                  0x7E,//57
                  0x81,//58
                  0x83,//59
                  0x85,//60
                  0x88,//61
                  0x8A,//62
                  0x8C,//63
                  0x8E,//64
                  0x91,//65
                  0x93,//66
                  0x95,//67
                  0x97,//68
                  0x99,//69
                  0x9C,//70
                  0x9E,//71
                  0xA0,//72
                  0xA2,//73
                  0xA4,//74
                  0xA6,//75
                  0xA8,//76
                  0xAA,//77
                  0xAC,//78
                  0xAD,//79
                  0xAF,//80
                  0xB1,//81
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 8   

                  0xB3,//82
                  0xB5,//83
                  0xB6,//84
                  0xB8,//85
                  0xBA,//86
                  0xBB,//87
                  0xBD,//88
                  0xBE,//89
                  0xC0,//90
                  0xC1,//91
                  0xC3,//92
                  0xC4,//93
                  0xC6,//94
                  0xC7,//95
                  0xC8,//96
                  0xCA,//97
                  0xCB,//98
                  0xCC,//99
                  0xCD,//100
                  0xCF,//101
                  0xD0,//102
                  0xD1,//103
                  0xD2,//104
                  0xD3,//105
                  0xD4,//106
                  0xD5,//107
                  0xD6,//108
                  0xD7,//109
                  0xD8,//110
                  0xD9,//111
                  0xDA,//112
                  0xDB,//113
                  0xDC,//114
                  0xDD,//115
                  0xDE,//116
                  0xDF,//117
                  0xDF,//118
                  0xE0,//119
                  0xE1,//120
                  0xE2,//121
                  0xE2,//122
                  0xE3,//123
                  0xE4,//124
                  0xE4,//125
                  0xE5,//126
                  0xE6,//127
                  0xE6,//128
                  0xE7,//129
                  0xE7,//130
                  0xE8,//131
                  0xE9,//132
                  0xE9,//133
                  0xEA,//134
                  0xEA,//135
                  0xEB //136
              };
              #endif
 484          
 485          
 486          #if     tab_50k_27k
              unsigned char const code        tab_temper[]=
              {
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 9   

                  0x24,       //0
                  0x26,
                  0x27,
                  0x29,
                  0x2B,
                  0x2C,
                  0x2E,
                  0x30,
                  0x32,
                  0x34,
                  0x36,
                  0x38,
                  0x3A,
                  0x3D,
                  0x3F,
                  0x41,
                  0x43,
                  0x46,
                  0x48,
                  0x4A,
                  0x4D,
                  0x4F,
                  0x52,
                  0x54,
                  0x57,
                  0x59,
                  0x5C,
                  0x5E,
                  0x61,
                  0x64,
                  0x66,
                  0x69,
                  0x6C,
                  0x6E,
                  0x71,
                  0x73,
                  0x76,
                  0x79,
                  0x7B,
                  0x7E,
                  0x80,
                  0x83,
                  0x86,
                  0x88,
                  0x8B,
                  0x8D,
                  0x90,
                  0x92,
                  0x95,
                  0x97,
                  0x99,
                  0x9C,
                  0x9E,
                  0xA0,
                  0xA2,
                  0xA5,
                  0xA7,
                  0xA9,
                  0xAB,
                  0xAD,
                  0xAF,
                  0xB1,
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 10  

                  0xB3,
                  0xB5,
                  0xB7,
                  0xB9,
                  0xBB,
                  0xBC,
                  0xBE,
                  0xC0,
                  0xC1,
                  0xC3,
                  0xC5,
                  0xC6,
                  0xC8,
                  0xC9,
                  0xCB,
                  0xCC,
                  0xCD,
                  0xCF,
                  0xD0,
                  0xD1,
                  0xD2,
                  0xD4,
                  0xD5,
                  0xD6,
                  0xD7,
                  0xD8,
                  0xD9,
                  0xDA,
                  0xDB,
                  0xDC,
                  0xDD,
                  0xDE,
                  0xDF,
                  0xE0,
                  0xE1,
                  0xE1,
                  0xE2,
                  0xE3,
                  0xE4,
                  0xE5,
                  0xE5,
                  0xE6,
                  0xE7,
                  0xE7,
                  0xE8,
                  0xE9,
                  0xE9,
                  0xEA,
                  0xEA,
                  0xEB,
                  0xEB,
                  0xEC,
                  0xEC,
                  0xED,
                  0xED,
                  0xEE,
                  0xEE,
                  0xEF,
                  0xEF,
                  0xF0,
                  0xF0,
                  0xF0,
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 11  

                  0xF1,
                  0xF1,
                  0xF2,
                  0xF2,
                  0xF2,
                  0xF3,
                  0xF3,
                  0xF3,
                  0xF4,
                  0xF4,
                  0xF4,
                  0xF4,
                  0xF5 //136
              };
              #endif
 628          
 629          
 630          #if   tab_other //5.1K上拉 100KNTC
 631          unsigned char const code        tab_temper[]=
 632          {
 633                  3,      //0℃           325.792
 634                  4,      //1℃           309.671
 635                  4,      //2℃           294.4406
 636                  4,      //3℃           280.0466
 637                  4,      //4℃           266.4385
 638                  5,      //5℃           253.5692
 639                  5,      //6℃           241.3946
 640                  5,      //7℃           229.8733
 641                  5,      //8℃           218.9668
 642                  6,      //9℃           208.6389
 643                  6,      //10℃          198.856
 644                  6,      //11℃          189.5862
 645                  7,      //12℃          180.8
 646                  7,      //13℃          172.4696
 647                  7,      //14℃          164.5689
 648                  8,      //15℃          157.0735
 649                  8,      //16℃          149.9605
 650                  8,      //17℃          143.2084
 651                  9,      //18℃          136.797
 652                  9,      //19℃          130.7073
 653                  10,     //20℃          124.9216
 654                  10,     //21℃          119.423
 655                  10,     //22℃          114.196
 656                  11,     //23℃          109.2256
 657                  11,     //24℃          104.4979
 658                  12,     //25℃          100
 659                  12,     //26℃          95.7194
 660                  13,     //27℃          91.6446
 661                  14,     //28℃          87.7646
 662                  14,     //29℃          84.0692
 663                  15,     //30℃          80.5486
 664                  15,     //31℃          77.1937
 665                  16,     //32℃          73.9959
 666                  17,     //33℃          70.947
 667                  17,     //34℃          68.0395
 668                  18,     //35℃          65.266
 669                  19,     //36℃          62.6197
 670                  20,     //37℃          60.0941
 671                  20,     //38℃          57.6832
 672                  21,     //39℃          55.3812
 673                  22,     //40℃          53.1827
 674                  23,     //41℃          51.0825
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 12  

 675                  24,     //42℃          49.0757
 676                  24,     //43℃          47.1578
 677                  25,     //44℃          45.3244
 678                  26,     //45℃          43.5713
 679                  27,     //46℃          41.8947
 680                  28,     //47℃          40.2908
 681                  29,     //48℃          38.7563
 682                  30,     //49℃          37.2876
 683                  31,     //50℃          35.8818
 684                  32,     //51℃          34.5358
 685                  34,     //52℃          33.2469
 686                  35,     //53℃          32.0122
 687                  36,     //54℃          30.8294
 688                  37,     //55℃          29.6959
 689                  38,     //56℃          28.6095
 690                  39,     //57℃          27.5681
 691                  41,     //58℃          26.5695
 692                  42,     //59℃          25.6118
 693                  43,     //60℃          24.6931
 694                  45,     //61℃          23.8118
 695                  46,     //62℃          22.966
 696                  47,     //63℃          22.1542
 697                  49,     //64℃          21.3749
 698                  50,     //65℃          20.6267
 699                  52,     //66℃          19.9081
 700                  53,     //67℃          19.2179
 701                  55,     //68℃          18.5547
 702                  56,     //69℃          17.9175
 703                  58,     //70℃          17.3052
 704                  59,     //71℃          16.7165
 705                  61,     //72℃          16.1505
 706                  63,     //73℃          15.6063
 707                  64,     //74℃          15.0829
 708                  66,     //75℃          14.5794
 709                  68,     //76℃          14.095
 710                  69,     //77℃          13.6288
 711                  71,     //78℃          13.1802
 712                  73,     //79℃          12.7483
 713                  74,     //80℃          12.3325
 714                  76,     //81℃          11.9321
 715                  78,     //82℃          11.5465
 716                  80,     //83℃          11.175
 717                  82,     //84℃          10.8171
 718                  83,     //85℃          10.4723
 719                  85,     //86℃          10.1399
 720                  87,     //87℃          9.8196
 721                  89,     //88℃          9.5108
 722                  91,     //89℃          9.213
 723                  93,     //90℃          8.9258
 724                  94,     //91℃          8.6488
 725                  96,     //92℃          8.3817
 726                  98,     //93℃          8.1239
 727                  100,    //94℃          7.8751
 728                  102,    //95℃          7.635
 729                  104,    //96℃          7.4033
 730                  106,    //97℃          7.1796
 731                  108,    //98℃          6.9636
 732                  110,    //99℃          6.755
 733                  112,    //100℃         6.5535
 734                  113,    //101℃         6.3589
 735                  115,    //102℃         6.1709
 736                  117,    //103℃         5.9892
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 13  

 737                  119,    //104℃         5.8137
 738                  121,    //105℃         5.644
 739                  123,    //106℃         5.4799
 740                  125,    //107℃         5.3214
 741                  127,    //108℃         5.168
 742                  129,    //109℃         5.0197
 743                  130,    //110℃         4.8763
 744                  132,    //111℃         4.7375
 745                  134,    //112℃         4.6033
 746                  136,    //113℃         4.4734
 747                  138,    //114℃         4.3478
 748                  139,    //115℃         4.2261
 749                  141,    //116℃         4.1084
 750                  143,    //117℃         3.9944
 751                  145,    //118℃         3.884
 752                  147,    //119℃         3.7771
 753                  148,    //120℃         3.6736
 754                  150,    //121℃         3.5734
 755                  152,    //122℃         3.4762
 756                  153,    //123℃         3.3821
 757                  155,    //124℃         3.291
 758                  157,    //125℃         3.2026
 759                  158,    //126℃         3.117
 760                  160,    //127℃         3.034
 761                  162,    //128℃         2.9535
 762                  163,    //129℃         2.8755
 763                  165,    //130℃         2.7998
 764                  166,    //131℃         2.7265
 765                  168,    //132℃         2.6553
 766                  169,    //133℃         2.5863
 767                  171,    //134℃         2.5193
 768                  172,    //135℃         2.4543
 769                  174,    //136℃         2.3913
 770                  175,    //137℃         2.3301
 771                  177,    //138℃         2.2707
 772                  178,    //139℃         2.2131
 773                  179,    //140℃         2.1571
 774                  181,    //141℃         2.1028
 775                  182,    //142℃         2.05
 776                  183,    //143℃         1.9988
 777                  185,    //144℃         1.9491
 778                  186,    //145℃         1.9007
 779                  187,    //146℃         1.8538
 780                  188,    //147℃         1.8082
 781                  190,    //148℃         1.7639
 782                  191,    //149℃         1.7208
 783                  192,    //150℃         1.6789
 784                  193,    //151℃         1.6383
 785                  194,    //152℃         1.5987
 786                  196,    //153℃         1.5603
 787                  197,    //154℃         1.5229
 788                  198,    //155℃         1.4866
 789                  199,    //156℃         1.4513
 790                  200,    //157℃         1.4169
 791                  201,    //158℃         1.3835
 792                  202,    //159℃         1.351
 793                  203,    //160℃         1.3193
 794                  204,    //161℃         1.2885
 795                  205,    //162℃         1.2586
 796                  206,    //163℃         1.2295
 797                  207,    //164℃         1.2011
 798                  208,    //165℃         1.1735
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 14  

 799                  209,    //166℃         1.1466
 800                  209,    //167℃         1.1205
 801                  210,    //168℃         1.095
 802                  211,    //169℃         1.0702
 803                  212,    //170℃         1.0461
 804                  213,    //171℃         1.0226
 805                  214,    //172℃         0.9997
 806                  214,    //173℃         0.9774
 807                  215,    //174℃         0.9557
 808                  216,    //175℃         0.9345
 809                  217,    //176℃         0.9139
 810                  217,    //177℃         0.8938
 811                  218,    //178℃         0.8742
 812                  219,    //179℃         0.8551
 813                  219,    //180℃         0.8365
 814                  220,    //181℃         0.8184
 815                  221,    //182℃         0.8007
 816                  221,    //183℃         0.7835
 817                  222,    //184℃         0.7667
 818                  223,    //185℃         0.7503
 819                  223,    //186℃         0.7344
 820                  224,    //187℃         0.7188
 821                  224,    //188℃         0.7036
 822                  225,    //189℃         0.6888
 823                  226,    //190℃         0.6744
 824                  226,    //191℃         0.6603
 825                  227,    //192℃         0.6465
 826                  227,    //193℃         0.6331
 827                  228,    //194℃         0.62
 828                  228,    //195℃         0.6072
 829                  229,    //196℃         0.5947
 830                  229,    //197℃         0.5826
 831                  230,    //198℃         0.5707
 832                  230,    //199℃         0.5591
 833                  231,    //200℃         0.5478
 834                  231,    //201℃         0.5367
 835                  232,    //202℃         0.5259
 836                  232,    //203℃         0.5154
 837                  232,    //204℃         0.5051
 838                  233,    //205℃         0.495
 839                  233,    //206℃         0.4852
 840                  234,    //207℃         0.4756
 841                  234,    //208℃         0.4662
 842                  234,    //209℃         0.4571
 843                  235,    //210℃         0.4482
 844                  235,    //211℃         0.4394
 845                  236,    //212℃         0.4309
 846                  236,    //213℃         0.4225
 847                  236,    //214℃         0.4144
 848                  237,    //215℃         0.4064
 849                  237,    //216℃         0.3986
 850                  237,    //217℃         0.391
 851                  238,    //218℃         0.3836
 852                  238,    //219℃         0.3763
 853                  238,    //220℃         0.3692
 854                  239,    //221℃         0.3622
 855                  239,    //222℃         0.3554
 856                  239,    //223℃         0.3488
 857                  239,    //224℃         0.3423
 858                  240,    //225℃         0.3359
 859                  240,    //226℃         0.3297
 860                  240,    //227℃         0.3236
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 15  

 861                  240,    //228℃         0.3177
 862                  241,    //229℃         0.3118
 863                  241,    //230℃         0.3061
 864                  241,    //231℃         0.3006
 865                  241,    //232℃         0.2951
 866                  242,    //233℃         0.2898
 867                  242,    //234℃         0.2845
 868                  242,    //235℃         0.2794
 869                  242,    //236℃         0.2744
 870                  243,    //237℃         0.2695
 871                  243,    //238℃         0.2647
 872                  243,    //239℃         0.26
 873                  243,    //240℃         0.2554
 874                  243,    //241℃         0.2509
 875                  244,    //242℃         0.2465
 876                  244,    //243℃         0.2422
 877                  244,    //244℃         0.238
 878                  244,    //245℃         0.2338
 879                  244,    //246℃         0.2298
 880                  245,    //247℃         0.2258
 881                  245,    //248℃         0.2219
 882                  245,    //249℃         0.2181
 883                  245     //250℃         0.2144
 884          
 885          };
 886          #endif
 887          
 888          unsigned char   get_wendu1(unsigned char ad_value);
 889          unsigned char   get_wendu2(unsigned char ad_value);
 890          void    temp_fast();
 891          
 892          
 893          //-----------------------------------------------------------------//
 894          //函数名称： void lab_ad_fun(void)
 895          //函数功能： 得出过滤的AD值（20ms执行一次）
 896          //输入参数： 无
 897          //输出参数： 无
 898          //返 回 值： 无
 899          //-----------------------------------------------------------------//
 900          void lab_ad_fun(void)
 901          {
 902   1          uchar ad_com=0;
 903   1      
 904   1      #if   c_ad_buz_com
 905   1          if(f_buzRun)
 906   1              ad_com=1;
 907   1      #endif
 908   1      
 909   1          if(ad_com==0)
 910   1          {
 911   2              if(b_delay_check_ad<10)   //复用之后延时检测AD
 912   2                  b_delay_check_ad++;
 913   2      
 914   2              if(b_delay_check_ad>=10)
 915   2              {
 916   3                  b_temp_ad=ADC_Obtain(c_ad_channel);
 917   3                  b_ad_buf0 += b_temp_ad;     //12位数据右对齐
 918   3                  b_ad_buf1 ++;
 919   3                  if(b_temp_ad>=b_admax_value)
 920   3                      b_admax_value=b_temp_ad;
 921   3                  if(b_temp_ad<=b_admin_value)
 922   3                      b_admin_value=b_temp_ad;
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 16  

 923   3                  if(b_ad_buf1 >= 0x0a)
 924   3                  {
 925   4                      b_ad_buf1 = 0;
 926   4                      b_ad_buf0-=b_admin_value;
 927   4                      b_ad_buf0-=b_admax_value;
 928   4                      b_ad_value = b_ad_buf0>>3;
 929   4                                      #if     c_ad_up_pull
 930   4                              b_ad_value = ~b_ad_value;
 931   4                                      #endif
 932   4                      b_ad_buf0 = 0;
 933   4                      b_admax_value=0;
 934   4                      b_admin_value=0xff;
 935   4      
 936   4      #if     c_ad_mode
              
                              b_temp = b_ad_value;
                              check_ad_ok=1;
              #endif
 941   4                  }
 942   3      
 943   3      #if     (c_ad_mode==0)
 944   3      
 945   3                  b_temp_cnt ++;
 946   3                  if(b_temp == b_ad_value)
 947   3                      b_temp_cnt = 0;
 948   3                  if(b_temp_cnt >= 0x32)
 949   3                  {
 950   4                      b_temp_cnt = 0;
 951   4                      b_temp = b_ad_value;
 952   4                      gb_wendu =  get_wendu1(b_temp);
 953   4                      check_ad_ok=1;
 954   4                  }
 955   3      
 956   3      #endif
 957   3      
 958   3      
 959   3      #if             double_ad_channel
                          b_temp_ad_1=ADC_Obtain(c_ad_channel_1);
                          b_ad_buf0_1 += b_temp_ad_1; //12位数据右对齐
                          b_ad_buf1_1 ++;
                          if(b_temp_ad_1>=b_admax_value_1)
                              b_admax_value_1=b_temp_ad_1;
                          if(b_temp_ad_1<=b_admin_value_1)
                              b_admin_value_1=b_temp_ad_1;
                          if(b_ad_buf1_1 >= 0x0a)
                          {
                              b_ad_buf1_1 = 0;
                              b_ad_buf0_1-=b_admin_value_1;
                              b_ad_buf0_1-=b_admax_value_1;
                              b_ad_value_1 = b_ad_buf0_1>>3;
              #if     c_ad_up_pull_1
                              b_ad_value_1 = ~b_ad_value_1;
              #endif
                              b_ad_buf0_1 = 0;
                              b_admax_value_1=0;
                              b_admin_value_1=0xff;
              #if     c_ad_mode_1
              
                              b_temp_1 = b_ad_value_1;
                              check_ad_ok_1=1;
              
              #endif
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 17  

                          }
              
              #if     (c_ad_mode_1==0)
                          b_temp_cnt_1 ++;
                          if(b_temp_1 == b_ad_value_1)
                              b_temp_cnt_1 = 0;
                          if(b_temp_cnt_1 >= 0x32)
                          {
                              b_temp_cnt_1 = 0;
                              b_temp_1 = b_ad_value_1;
                              gb_wendu2 =  get_wendu2(b_temp_1);
                              check_ad_ok_1=1;
                          }
              #endif
              
              #endif
1001   3              }
1002   2      
1003   2          }
1004   1          else
1005   1          {
1006   2              b_delay_check_ad=0;
1007   2              b_temp_cnt=0;
1008   2      #if       double_ad_channel
                      b_temp_cnt_1=0;
              #endif
1011   2          }
1012   1      }
1013          
1014          #if             (c_ad_mode == 0)
1015          /*-----------------------------------------------------------------
1016          函数名称： unsigned char        get_wendu1(unsigned char ad_value)
1017          函数功能： 将得到的ad值进行温度转换
1018          输入参数： ad值
1019          返 回 值： 温度值
1020          -----------------------------------------------------------------*/
1021          unsigned char   get_wendu1(unsigned char ad_value)
1022          {
1023   1          unsigned char i=0;
1024   1      
1025   1          while(ad_value >= tab_temper[i])
1026   1          {
1027   2              i++;
1028   2              if(i >= 250) break;     //136
1029   2          }
1030   1          if(i)
1031   1              i--;
1032   1          return i;
1033   1      
1034   1      }
1035          #endif
1036          
1037          
1038          #if             double_ad_channel
              
              #if             (c_ad_mode_1 == 0)
              /*-----------------------------------------------------------------
              函数名称： unsigned char        get_wendu1(unsigned char ad_value)
              函数功能： 将得到的ad值进行温度转换
              输入参数： ad值
              返 回 值： 温度值
              -----------------------------------------------------------------*/
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 18  

              unsigned char   get_wendu2(unsigned char ad_value2)
              {
                  unsigned char i=0;
              
                  while(ad_value2 >= tab_temper[i])
                  {
                      i++;
                      if(i >= 136) break;
                  }
                  if(i)
                      i--;
                  return i;
              
              }
              #endif
              
              #endif
1064          
1065          
1066          #if                      c_temp_fast
              /*-----------------------------------------------------------------
              函数名称： unsigned char        get_wendu1(unsigned char ad_value)
              函数功能： 判升温过快程序 连续2次3秒升温超过4度
              输入参数：
              返 回 值： 温度值
              -----------------------------------------------------------------*/
              void    temp_fast()
              {
                  if(f_mjs_power&&(!b_warning)&&(gb_wendu>=50))
                  {
                      if(b_error_e3>=3)
                      {
                          b_error_e3=0;
                          if(!f_first_checke3)
                          {
                              if((gb_wendu>=b_wendu_old)&&(gb_wendu-b_wendu_old>=4))
                              {
                                  if(!f_e3_xd)
                                  {
                                      f_e3_xd=1;
                                  }
                                  else
                                  {
                                      b_warning |= 0X04;
                                  }
                              }
                              else
                                  f_e3_xd=0;
                          }
                          f_first_checke3=0;
                          b_wendu_old=gb_wendu;
                      }
                  }
                  else
                  {
                      b_error_e3=0;
                      f_first_checke3=1;
                      f_e3_xd=0;
                      b_wendu_old=gb_wendu;
                  }
              }
              #endif
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 19  

1109          
1110          #endif
1111          
1112          
1113          
1114          
1115          
1116          
1117          /*-----------------------------------------------------------------
1118          函数名称： void warning_check(void)
1119          函数功能： 检测ad值是否符合要求，否则报警
1120          输入参数： 无
1121          返 回 值： 无
1122          -----------------------------------------------------------------*/
1123          
1124          /*-----------------------------------------------------------------
1125          函数名称： void warning_check(void)
1126          函数功能： 检测ad值是否符合要求，否则报警
1127          输入参数： 无
1128          返 回 值： 无
1129          -----------------------------------------------------------------*/
1130          
1131          void    warning_check()
1132          {
1133   1              /*开路报错检测*/
1134   1          if(check_ad_ok)
1135   1          {
1136   2              if(!f_mjs_power)
1137   2                  b_error_sec=0;
1138   2              if(b_temp<=c_open_error)
1139   2              {
1140   3                  if(b_error_sec>=c_kltime)
1141   3                  {
1142   4                    if(!(b_warning&0x01))
1143   4                    {
1144   5                      open_buz(2);    //报警音
1145   5                      b_warning|=0x01;
1146   5                    }
1147   4                  }
1148   3              }
1149   2              else if(b_temp>c_open_error+2)
1150   2              {
1151   3                  b_error_sec = 0;
1152   3                      #if     c_bjhf_1        //0      开路报警可恢复
                          b_warning&=~0x01;
                              #endif
1155   3              }
1156   2              
1157   2                      ///*短路报错检测*/
1158   2              //if(b_temp>=c_short_error)
1159   2              //{
1160   2              //  if(f_mjs_power)
1161   2              //  {
1162   2              //      if(!(b_warning&0x02))
1163   2              //      {
1164   2              //        open_buz(2);  //报警音
1165   2              //        b_warning|=0x02;
1166   2              //      }
1167   2              //  }
1168   2              //}
1169   2              //else
1170   2              //{
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 20  

1171   2                      //#if   c_bjhf_2        //0   //短路报警可恢复
1172   2              //    b_warning&=~0x02;
1173   2                      //#endif
1174   2              //}
1175   2      
1176   2                      /*短路报错检测*/
1177   2                      /*带延时*/
1178   2              if(b_temp>=c_short_error)
1179   2              {
1180   3                if(f_mjs_power)
1181   3                {
1182   4                  if(b_error_sec_1>=40)
1183   4                  {
1184   5      
1185   5                    if(!(b_warning&0x02))
1186   5                    {
1187   6                      open_buz(2);    //报警音
1188   6                      b_warning|=0x02;
1189   6                    }
1190   5                  }
1191   4      
1192   4                }
1193   3              }
1194   2              else
1195   2              {
1196   3                              b_error_sec_1=0;
1197   3                      #if     c_bjhf_2        //0   //短路报警可恢复
                          b_warning&=~0x02;
                              #endif
1200   3              }
1201   2      
1202   2      
1203   2      
1204   2                      ///*超温报错检测*/
1205   2              //if((b_temp<c_short_error)&&(b_temp>=c_over_error))
1206   2              //{
1207   2              //              if(f_mjs_power)
1208   2              //              {
1209   2              //      if(!(b_warning&0x04))
1210   2              //      {
1211   2              //        open_buz(2);  //报警音
1212   2              //        b_warning|=0x04;
1213   2              //      }
1214   2                      //          }
1215   2              //}
1216   2       //       else
1217   2       //         b_warning&=~0x10;
1218   2          }
1219   1      
1220   1              #if     double_ad_channel
                  if(check_ad_ok_1)
                  {
                      if(!f_mjs_power)
                              b_error_sec_1=0;
                      if(b_temp_1<=c_open_error)
                      {
                          if(b_error_sec_1>=c_kltime)
                          {
                              if(!(b_warning&0x04))
                              {
                               open_buz(2);
                               b_warning|=0x04;
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 21  

                              }
                          }
                      }
                      else if(b_temp_1>c_open_error+2)
                      {
                          b_error_sec_1 = 0;
                              #if     c_bjhf_1
                           b_warning&=~0x04;
                              #endif
                      }
                       
                      if(b_temp_1>=c_short_error)
                      {
                              if(f_mjs_power)
                              {
                             if(!(b_warning&0x08))
                             {
                               open_buz(8);
                               b_warning|=0x08;
                             }
                              }
                      }
                      else
                      {
                              #if     c_bjhf_2        //短路报警可恢复
                          b_warning&=~0x08;
                              #endif
                      }
              
                  }
                      #endif
1264   1             
1265   1      
1266   1              if(b_warning!=b_warning_buf)
1267   1              {
1268   2                  if(b_warning && (b_warning_buf == 0))
1269   2                  {
1270   3                      
1271   3                  }
1272   2                  else if(!b_warning && (b_warning_buf != 0))
1273   2                  {
1274   3                      open_buz(1);    //按键音
1275   3                  }
1276   2              }
1277   1      
1278   1              if(b_warning)
1279   1              {
1280   2                b_quit_time++;
1281   2                if(b_quit_time>=3000)
1282   2                {
1283   3                  quit_work();
1284   3                  b_quit_time=0;
1285   3                  b_warning=0;
1286   3                }
1287   2              }
1288   1              else
1289   1                b_quit_time=0;
1290   1      
1291   1      
1292   1              b_warning_buf=b_warning;
1293   1      }
1294          
C51 COMPILER V9.60.0.0   AD                                                                05/09/2023 16:49:06 PAGE 22  

1295          
1296          
1297          
1298          
1299          
1300          
1301          
1302          
1303          
1304          
1305          
1306          
1307          
1308          
1309          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    500    ----
   CONSTANT SIZE    =    251    ----
   XDATA SIZE       =     17    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
